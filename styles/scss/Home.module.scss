@import "./variables.scss";

.expBkgrdTxt {
  font-size: 100dvh;
  position: fixed;
  pointer-events: none;
  user-select: none;
}
.currentPrjHovered {
  position: fixed;
  top: -2.5vh;
  left: -2.5vw;
  height: 105vh;
  width: 105vw;
  transform: translate(0) !important;
  img {
    object-fit: cover;
    filter: brightness(0.7);
    mix-blend-mode: difference;
  }
  &.hover:after {
    content: " ";
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background-image: url("../../public/imgs/filter.webp");
  }
}
.modalMatteBkgrd {
  position: fixed;
  height: 100dvh;
  width: 100dvw;
  background-color: rgba(0, 0, 0, 0);
  z-index: -1;
}
.mainMotionDiv {
  overflow: hidden;
}
.expContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100dvh;
  width: 100dvw;
  .triangleProjectRow {
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    margin: 11vw;
    .horizontalLineL, .horizontalLineR {
      position: absolute;
      width: max(200vh, 200vw);
      height: 1px;
      background-color: $semitransparentDark5;
      transition: background-color $change-theme-duration;
      animation: drawOrizLine cubic-bezier(.34,.65,.46,.76) 5s;
      animation-iteration-count: 1;
      animation-fill-mode: forwards;
      margin-top: 21.8vw;
      transform: translateX(max(200vh, 200vw));
      z-index: 300;
    }
    .horizontalLineL {
      transform: translateX(calc(max(200vh, 200vw) * -1));
    }
    @keyframes drawOrizLine {
      100% {
        transform: translateX(0);
      }
    }


    .obliqueLineP, .obliqueLineN {
      position: absolute;
      top: 1vh;
      margin-top: -1.3vh;
      left: calc(-0.1px * var(--i));
      width: 1px;
      height: 0vw;
      background-color: $semitransparentDark5;
      transition: background-color $change-theme-duration;
      transform: rotate(26.5deg);
      transform-origin: top;
      animation: drawObliqueLine cubic-bezier(.34, .65, .46, .76) 5s;
      animation-iteration-count: 1;
      animation-fill-mode: forwards;
      z-index: 300;
    }

    .obliqueLineN {
      transform: rotate(-26.5deg);
      z-index: 300;
    }

    @keyframes drawObliqueLine {
      0% {
        height: 0vw;
      }
      100% {
        height: max(330vh, 330vw);
      }
    }

    .triangleProjectWrapper,
    .triangleProjectWrapper__NoProj {
      position: absolute;
      background: transparent;
      padding: 0px;
      border: 11vw solid transparent;
      border-top: 0;
      border-bottom: 22vw solid transparent;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: center;
      pointer-events: none;

      > div.triangleProjectContent {
        position: absolute;
        height: 21vw;
        width: 21vw;
        background-color: blue;
        img {
          object-fit: cover;
          pointer-events: auto;
        }
      }
      &:nth-child(odd) {
        border-top: 22vw solid transparent;
        border-bottom: 0px solid transparent;
        left: calc(-11vw * var(--index) - 11vw);

        > div.triangleProjectContent {
          bottom: 0.7vw;
          clip-path: polygon(0 0, 100% 0, 50% 100%, 50% 100%);
        }
      }
      &:nth-child(even) {
        left: calc(-11vw * var(--index) - 11vw);

        > div.triangleProjectContent {
          top: 0.7vw;
          clip-path: polygon(50% 0, 50% 0, 100% 100%, 0% 100%);
        }
      }
    }
    .triangleProjectWrapper {
      z-index: 10;
    }
    .triangleProjectWrapper__NoProj {
      &:nth-child(odd) {
        border-top: 22vw solid transparent;
      }
      &:nth-child(even) {
        border-bottom: 22vw solid transparent;
      }
    }
  }
  .noProjRow:nth-child(even) {
    transform: translateX(11vw);
  }
  .seeMoreText{
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
}

html[data-theme="dark"] {
  .horizontalLineL,
    .horizontalLineR{
      transition: background-color $change-theme-duration !important;
    background-color: red !important;
    }
  .triangleProjectWrapper,
  .triangleProjectWrapper__NoProj  {
    .obliqueLineP,
    .obliqueLineN {
      transition: background-color $change-theme-duration!important;
      background-color: red !important;
    }
  }
}